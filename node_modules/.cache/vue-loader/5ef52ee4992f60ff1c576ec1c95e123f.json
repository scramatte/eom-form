{"remainingRequest":"/home/scramatte/vue/eom-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scramatte/vue/eom-form/src/components/fields/EomForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/scramatte/vue/eom-form/src/components/fields/EomForm.vue","mtime":1588783616264},{"path":"/home/scramatte/vue/eom-form/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scramatte/vue/eom-form/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/scramatte/vue/eom-form/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/scramatte/vue/eom-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scramatte/vue/eom-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKLmtleSB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgY29sb3I6ICMwMkJDNzc7Cn0KCg=="},{"version":3,"sources":["EomForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA","file":"EomForm.vue","sourceRoot":"src/components/fields","sourcesContent":["<template>\n  <div>\n    <b-row>\n        <component\n            v-for=\"field in parsedSchema\"\n            :key=\"field.model\"\n            :name=\"field.model\"\n            :validations=\"field.validations\"\n            :is=\"field.component\"\n            v-bind=\"binds(field)\"\n            :value=\"val(field)\"\n            @input=\"update(field.model, $event)\"\n        >\n        <slot/>\n        </component>\n    </b-row>\n    <pre v-html=\"prettyJSON(value)\"></pre>\n  </div>\n</template>\n\n<style>\n.key {\n  font-weight: bold;\n  color: #02BC77;\n}\n\n</style>\n<script>\nimport { isFunction, forEach } from 'lodash'\n\nexport default {\n  props: {\n    schema: {\n      type: [Object, Array],\n      required: true\n    },\n    value: {\n      type: Object,\n      required: true\n    },\n    sharedConfig: {\n      type: Object,\n      required: false\n    }\n  },\n  data () {\n    return {\n      form: {\n      }\n    }\n  },\n  watch: {\n    value: function () {\n      this.$nextTick(() => {\n        this.validate()\n      })\n    }\n  },\n  computed: {\n    parsedSchema () {\n      if (Array.isArray(this.schema)) return this.schema\n      const arraySchema = []\n      for (let model in this.schema) {\n        arraySchema.push({\n          ...this.schema[model],\n          model\n        })\n      }\n      return arraySchema\n    },\n    errorMessages () {\n      return ['']\n    }\n  },\n  methods: {\n    prettyJSON: function (json) {\n      if (json) {\n        json = JSON.stringify(json, undefined, 4)\n        json = json.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>')\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/g, function (match) {\n          var cls = 'number'\n          if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n              cls = 'key'\n            } else {\n              cls = 'string'\n            }\n          } else if (/true|false/.test(match)) {\n            cls = 'boolean'\n          } else if (/null/.test(match)) {\n            cls = 'null'\n          }\n          return '<span class=\"' + cls + '\">' + match + '</span>'\n        })\n      }\n    },\n    update (property, value) {\n      this.$emit('input', {\n        ...this.value,\n        [property]: value\n      })\n    },\n    binds (field) {\n      return field.schema\n        ? { schema: field.schema }\n        : { ...this.sharedConfig, ...field }\n    },\n    val (field) {\n      if (field.schema && !this.value[field.model]) {\n        return {}\n      }\n      return this.value[field.model]\n    },\n    validate () {\n      let valid = true\n      forEach(this.$children, (child) => {\n        if (isFunction(child.validate)) {\n          let validation = child.validate()\n          valid = valid && validation\n        }\n      })\n      return valid\n    }\n  }\n}\n</script>\n"]}]}